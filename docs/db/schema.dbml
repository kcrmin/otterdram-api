// OtterDram DB Schema
// version: 3.1.1
// last updated: 2025-08-17
// author: kcrmin

// ======================= ENUMS (상수 타입) =======================
// 1. Common
Enum DataStatus {
  // DRAFT       // 초기 생성 상태 (비노출)
  IN_REVIEW   // 리비전 진행 중 상태 (노출 가능하나 최신 아님)
  CONFIRMED   // 리비전 완료 상태 (정상 노출)
  SUPPRESSED  // 신고 등으로 숨김 처리된 상태 (비노출)
}
Enum LanguageCode {
    EN
    BR
    DE
    ES
    FA
    FR
    HR
    IT
    JA
    KO
    NL
    PL
    PT
    PT_BR
    RU
    TR
    UK
    ZH_CN
}
Enum Privacy {
  PUBLIC            // 전체 공개 (누구나 접근 가능)
  FOLLOWERS_ONLY    // 팔로워에게만 공개 (로그인 필요)
  MEMBERS_ONLY      // 멤버 전용 공개 (그룹/커뮤니티 소속자만 접근 가능)
  PRIVATE           // 비공개 (작성자 본인만 접근 가능)
}
Enum RevisionStatus {
  // DRAFT      // 초기 생성 상태 (임시 저장)
  IN_REVIEW     // 검토 요청됨 (제출 완료)
  APPROVED      // 승인 완료 상태 (메인 반영 대상)
  REJECTED      // 반려됨 (비노출)
}

// 2. Spirits
Enum AgeStatementType {
  AGE_STATED  // 숙성 연수 명시 (예: 12년, 18년 등)
  NAS         // No Age Statement (숙성 연수 미표기)
  UNAGED      // 숙성되지 않은 증류주 (예: 화이트 럼, 진, 보드카 등)
  UNKNOWN     // 알 수 없음 (예: 정보 부족, 미확인 등)
}
Enum BottlingFormatType {
  SINGLE_CASK   // 단일 캐스크에서 병입 (Single Barrel과 동일 의미)
  SMALL_BATCH   // 소규모 캐스크 블렌딩, 제한된 수량 생산
  STANDARD      // 대량 생산을 위한 일반적인 병입 방식
  UNKNOWN       // 병입 방식에 대한 정보 없음
}
Enum BottlingStrengthType {
  CASK_STRENGTH   // 물 희석 없이 병입 (Barrel Proof와 동일)
  FULL_PROOF      // 캐스크에 넣을 때의 도수로 희석해 병입
  OVERPROOF       // 일반적인 제품보다 높은 도수로 병입
  STANDARD        // 일반적인 희석 병입 방식
  UNDERPROOF      // 일반적인 기준보다 낮은 도수로 병입
}
Enum DistilleryOperationalStatus {
  ACTIVE                // 정상 운영 중
  INACTIVE              // 일시 비가동(일시 중단, 휴업)
  CLOSED                // 완전 폐쇄(문 닫음)
  DEMOLISHED            // 철거됨(건물/시설 사라짐)
  UNDER_CONSTRUCTION    // 건설 중(미완공)
  PLANNED               // 설립 예정(계획만 있음)
  MOTHBALLED            // 장기 비가동(시설 유지/재개 가능)
  RENOVATION            // 리노베이션(공사/개조 중)
  UNKNOWN               // 정보 없음/불분명
}
Enum FillNumber {
  UNKNOWN       // 정보 없음
  VIRGIN        // 새 캐스크
  FIRST_FILL    // 첫 번째 재사용
  SECOND_FILL   // 두 번째 재사용
  THIRD_FILL    // 세 번째 재사용
  REFILL        // 리필 캐스크 (정확한 횟수 불명)
}
Enum PeatLevel {
  NONE        // No peat influence
  LIGHT       // Subtle peat/smoke influence
  MEDIUM      // Balanced or moderate peat influence
  HEAVY       // Strong peat influence
  EXTREME     // Very strong or overwhelming peat influence
  UNKNOWN     // Unknown peat level
}

// 3. Target
Enum CommentTargetEntity {
  BRAND
  COLLECTION
  MODEL
}
Enum RevisionTargetEntity {
  COMPANY
  DISTILLERY
  BRAND
  COLLECTION
  MODEL
  RELEASE
  CASK
  CASK_MATERIAL
  CASK_TYPE
}
Enum TagTargetEntity {
  COMPANY
  DISTILLERY
  BRAND
  COLLECTION
  MODEL
  RELEASE
}

// 4. UGC (User Generated Content)
Enum AlcoholPresence {
  NONE
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}
Enum AuthMethod {
  QR_CODE
  NFC
  CODE
}
Enum Balance {
  UNBALANCED
  SLIGHTLY_UNBALANCED
  BALANCED
  MODERATELY_BALANCED
  WELL_BALANCED
}
Enum BodyIntensity {
  LIGHT
  MEDIUM
  FULL
  OILY
  CREAMY
}
Enum Complexity {
  LOW
  MEDIUM
  HIGH
}
Enum FinishLength {
  VERY_SHORT
  SHORT
  MEDIUM
  LONG
  VERY_LONG
  EXTRA_LONG
}
Enum ServingStyle {
  NEAT
  ON_THE_ROCKS
  WITH_WATER
  HIGHBALL
  OTHER
}
Enum Tier {
  UNACCEPTABLE      // 50 - 59
  BELOW_AVERAGE     // 60 - 69
  AVERAGE           // 70 - 79
  DECENT            // 80 - 89
  OUTSTANDING       // 90 - 95
  EXTRAORDINARY     // 96 - 100
}
Enum TransferStatus {
  ACTIVE
  CLAIMED
  EXPIRED
  REVOKED
}
Enum VolumeUnit {
  ML
  CL
  L
  OZ
  SHOT
  UNKNOWN
}
Enum VoteType {
  LIKE
  DISLIKE
}

// 5. User
Enum FollowStatus {
  APPROVED
  PENDING
  REJECTED
}
Enum Gender {
  MALE
  FEMALE
  RATHER_NOT_SAY
  UNSPECIFIED
  OTHER
}
Enum UserStatus {
  ACTIVE        // 정상 활동 중인 계정
  SUSPENDED     // 임시 정지된 계정 (관리자 또는 시스템에 의해 제한됨)
  BANNED        // 영구 정지된 계정 (위반 등으로 강제 차단됨)
  DEACTIVATED   // 사용자가 직접 비활성화한 계정 (재활성화 가능)
  DELETED       // 완전히 삭제된 계정 (복구 불가))
}

// === USER DATA ===

// -- 사용자 정보 --
Table users {
  id id [pk, increment]
  username varchar(50) [not null, unique, note: "@username"]
  email varchar(255) [not null, unique, note: "인증된 이메일만"]
  profile_image varchar(255)
  verified boolean [not null, default: false, note: "인증된 인플루언서/전문가"]
  user_privacy Privacy [not null, default: 'PUBLIC']
  user_status UserStatus [not null, default: 'ACTIVE']
  last_login_at timestamptz(6) [not null]
  created_at timestamptz(6) [not null]
  updated_at timestamptz(6) [not null]
  deleted_at timestamptz(6)
}
Table user_profiles {
  id bigint [pk, increment]
  user_id bigint [ref: - users.id, unique, not null]
  display_name varchar(100) [not null]
  bio text
  country_id bigint [ref: > countries.id]
  city_id bigint [ref: > cities.id]
  address varchar(255)
  birthday date [not null]
  gender Gender [not null, default: 'UNSPECIFIED']
  created_at timestamptz(6) [not null]
  updated_at timestamptz(6) [not null]
}
Table user_social_accounts {
  id bigint [pk, increment]
  user_id bigint [not null, ref: > users.id]
  provider varchar(50) [not null]
  provider_id varchar(255) [not null]
  created_at timestamptz(6) [not null]
  indexes {
    (provider, provider_id) [unique]
  }
}
Table user_settings {
  id bigint [pk, increment]
  user_id bigint [ref: - users.id, not null, unique]
  // marketing_opt_in boolean [not null, default: false, note: "마케팅 수신 동의 여부"]
  // marketing_opt_at timestamptz(6) [not null, note: "마케팅 수신 동의 시각(최초 동의/철회 변경 시마다 갱신)"]
  terms_version_agreed varchar(50) [not null, note: "약관버전. 예: '2024.06'"]
  // notification_opt_in boolean [not null, default: false, note: "이메일/앱 알림 전체 동의 여부"]
  // push_opt_in boolean [not null, default: false, note: "앱 푸시 알림 동의 여부"]
  lang_preference LanguageCode [not null, default: 'en']
  created_at timestamptz(6) [not null]
  updated_at timestamptz(6) [not null]
}
Table user_roles {
  id bigint [pk, increment]
  user_id bigint [ref: > users.id, not null]
  role_id bigint [ref: > roles.id, not null]
  created_at timestamptz(6) [not null, note: "ROLE_USER: created_at, ROLE_ADMIN: assigned_at"]
  created_by bigint [ref: > users.id, not null, note: "ROLE_USER: created_by, ROLE_ADMIN: assigned_by"]
  indexes {
    (user_id, role_id) [unique]
  }
}
Table roles {
  id bigint [pk, increment]
  role_name varchar(50) [unique, not null, note: "ROLE_REVIEWER, ROLE_EDITOR, ROLE_ADMIN, ROLE_USER"]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
}
Table user_follows {
  id bigint [pk, increment]
  follower_id bigint [ref: > users.id, not null]
  followee_id bigint [ref: > users.id, not null]
  status FollowStatus [not null, default: `APPROVED`]
  created_at timestamptz(6) [not null]
}
Table user_blocks {
  id bigint [pk, increment]
  blocker_id bigint [ref: > users.id, not null]
  blocked_id bigint [ref: > users.id, not null]
  created_at timestamptz(6) [not null]
}


// === REPORT ===

// -- 신고 / 리포트 --
Table user_reports {
  id bigint [pk, increment]
  reporter_id bigint [ref: > users.id, not null]
  reported_user_id bigint [ref: > users.id, not null]
  language_code LanguageCode [not null]
  report_reason varchar(100) [not null, note: "예: '욕설', '스팸' 등"]
  report_description text
  reported_at timestamptz(6) [not null]
  status ReportStatus [not null, default: 'PENDING']
}
Table content_reports {
  id bigint [pk, increment]
  reporter_id bigint [ref: > users.id, not null]
  target_type ReportTargetType [not null]
  target_id bigint [not null]
  language_code LanguageCode [not null]
  report_reason varchar(100) [not null]
  report_description text
  reported_at timestamptz(6) [not null]
  status ReportStatus [not null, default: 'PENDING']
}


// === USER-GENERATED CONTENT (UGC) ===

// -- 선반 --
Table shelves {
  id bigint [pk, increment]
  owner_id bigint [not null, ref: > users.id]
  privacy Privacy [not null, default: 'PUBLIC']
  shelf_name varchar(100) [not null]
  created_at timestamptz(6) [not null]
  updated_at timestamptz(6) [not null]
  deleted_at timestamptz(6)
}
Table shelf_share_tokens {
  id bigint [pk, increment]
  shelf_id bigint [not null, ref: > shelves.id]
  claim_type AuthMethod [not null]
  claim_token varchar(100) [not null, unique]
  status TokenStatus [default: 'ACTIVE']
  created_at timestamptz(6) [not null]
  updated_at timestamptz(6) [not null]
}

// -- 선반 병 --
Table bottles {
  id bigint [pk, increment]
  shelf_id bigint [ref: > shelves.id, not null]
  release_id bigint [ref: > releases.id, not null]
  note varchar(255)
  residual_volume smallint
  residual_volume_unit VolumeUnit [default: 'ML', not null]
  bottle_size smallint
  bottle_size_unit VolumeUnit [default: 'ML', not null]
  acquired_at timestamptz(6)
  opened boolean [not null, default: false]
  first_opened_at timestamptz(6)
  last_opened_at timestamptz(6)
  completed boolean [not null, default: false]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table bottle_transfers {
  id bigint [pk, increment]
  bottle_id bigint [ref: > bottles.id, not null]
  status TokenStatus [not null, default: 'ACTIVE']
  transfered_at timestamptz(6)
  transfered_by bigint [ref: > users.id, note: "claim된 이후 입력"]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
}
Table bottle_transfer_tokens {
  id bigint [pk, increment]
  bottle_transfer_id bigint [not null, ref: > bottle_transfers.id]
  claim_type AuthMethod [not null]
  claim_token varchar(100) [not null, unique]
  expires_at timestamptz(6) [not null]

  indexes {
    (bottle_transfer_id, claim_type) [unique]
  }
}

// -- 선반 바이알 --
Table vials {
  id bigint [pk, increment]
  shelf_id bigint [ref: > shelves.id, not null]
  release_id bigint [ref: > releases.id, not null]
  vial_name varchar(100) [not null]
  is_blind boolean [not null, default: false]
  note varchar(255)
  vial_size smallint
  vial_size_unit VolumeUnit [default: 'ML', not null]
  acquired_at timestamptz(6)
  breathed_for interval [note: "첫 개봉 후 지난 시간 (last_opened_at - first_opened_at)"]
  completed boolean [not null, default: false]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table vial_transfers {
  id bigint [pk, increment]
  vial_id bigint [ref: > vials.id, not null]
  status TokenStatus [not null, default: 'ACTIVE']
  transfered_at timestamptz(6)
  transfered_by bigint [ref: > users.id, note: "claim된 이후 입력"]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
}
Table vial_transfer_tokens {
  id bigint [pk, increment]
  vial_transfer_id bigint [not null, ref: > vial_transfers.id]
  claim_type AuthMethod [not null]
  claim_token varchar(100) [not null, unique]
  expires_at timestamptz(6) [not null]

  indexes {
    (vial_transfer_id, claim_type) [unique]
  }
}

// -- 리뷰 --
Table reviews {
  review_id bigint [pk, increment]
  release_id bigint [ref: > releases.id, not null]
  vial_id bigint [ref: > vials.id]
  privacy Privacy [not null, default: 'PUBLIC']
  language_code LanguageCode [not null]
  blind_tasting boolean [not null, default: false]
  serving_style ServingStyle [not null]
  serving_size smallint [not null]
  serving_size_unit VolumeUnit [not null, default: 'UNKNOWN']
  breathed_for varchar [note: "첫 개봉 후 지난 시간 (last_opened_at - first_opened_at)"]
  tier Tier [not null]
  score decimal(4, 1)
  alcohol_presence AlcoholPresence [not null]
  complexity Complexity [not null]
  body_intensity BodyIntensity [not null]
  finish_length FinishLength [not null]
  balance Balance [not null]
  overall_description text [note: "종합 평가"]
  nose_description text [note: "향"]
  palate_description text [note: "맛"]
  finish_description text [note: "피니시"]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  modified_at timestamptz(6)
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}

// -- 댓글 & 투표 --
Table entity_comments {
  id bigint [pk, increment]
  entity_type CommentTargetType [not null]
  entity_id bigint [not null]
  parent_id bigint [ref: > entity_comments.id]
  depth smallint [not null, default: '0', note: "카테고리 깊이 (최대 1), 0=루트, 1=1단계"]
  language_code LanguageCode [not null, default: 'EN']
  comment text [not null]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  modified_at timestamptz(6)
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table comment_votes {
  id bigint [pk, increment]
  entity_comment_id bigint [ref: > entity_comments.id]
  vote_type VoteType [not null]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  indexes {
    (entity_comment_id, created_by) [unique]
  }
}


// === DOMAIN MASTER DATA ===

// -- 카테고리 --
Table categories {
  id bigint [pk, increment]
  name varchar(100) [not null, note: "카테고리명, 예: 'Single Malt', 'Bourbon', 'Blended'"]
  parent_id bigint [ref: > categories.id, default: null]
  depth smallint [not null, note: "카테고리 깊이, 루트=0, 예: 1=1단계, 2=2단계"]
  path varchar(255) [not null, note: "materialized path, 예: '1/2/3'"]
  translations jsonb [note: "다국어 JSON"]
  descriptions jsonb [note: "다국어 JSON"]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}

// -- 위스키 구조: 회사 → 증류소 → 브랜드 → 컬렉션 → 모델 → 릴리즈 --
Table companies {
  id bigint [pk, increment]
  parent_company_id bigint [ref: > companies.id]
  company_logo varchar(255)
  company_name varchar(100) [not null, unique]
  translations jsonb [note: "다국어 지원 이름"]
  descriptions jsonb [note: "다국어 지원"]
  independent_bottler boolean [not null, default: false]
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table distilleries {
  id bigint [pk, increment]
  company_id bigint [ref: > companies.id]
  distillery_logo varchar(255)
  distillery_name varchar(100) [not null, unique]
  translations jsonb [note: "다국어 지원 이름"]
  descriptions jsonb [note: "다국어 지원"]
  country_id bigint [ref: > countries.id]
  city_id bigint [ref: > cities.id]
  address varchar(255)
  operational_status DistilleryOperationalStatus [not null, default: 'UNKNOWN']
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table distillery_brand_relations {
  id bigint [pk, increment]
  distillery_id bigint [ref: > distilleries.id, not null]
  brand_id bigint [ref: > brands.id, not null]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
}
Table brands {
  id bigint [pk, increment]
  company_id bigint [ref: > companies.id]
  brand_logo varchar(255)
  brand_name varchar(100) [not null, unique]
  translations jsonb [note: "다국어 지원 이름"]
  descriptions jsonb [note: "다국어 지원"]
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table collections {
  id bigint [pk, increment]
  brand_id bigint [ref: > brands.id, not null]
  collection_name varchar(100) [not null]
  translations jsonb [note: "다국어 지원 이름"]
  descriptions jsonb [note: "다국어 지원"]
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table models {
  id bigint [pk, increment]
  collection_id bigint [ref: > collections.id, not null]
  category_id bigint [ref: > categories.id, note: "예: 버번, 블랜디드 등"]
  model_image varchar(255)
  model_name varchar(100) [not null]
  translations jsonb [note: "다국어 지원 이름"]
  descriptions jsonb [note: "다국어 지원"]
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table release_distillery_relations {
  id bigint [pk, increment]
  release_id bigint [ref: > releases.id, not null]
  distillery_id bigint [ref: > distilleries.id, not null]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
}
Table releases {
  id bigint [pk, increment]
  model_id bigint [ref: > models.id, not null]
  release_image varchar(255)
  release_name varchar(100) [not null]
  translations jsonb [note: "다국어 지원 이름"]
  descriptions jsonb [note: "다국어 지원"]
  age_statement_type AgeStatementType [not null, default: 'UNKNOWN']
  stated_age smallint [note: "age_type이 'STATED'일 때만 값이 있음"]
  distilled_on date
  bottled_on date
  bottling_strength_type BottlingStrengthType [not null, default: 'STANDARD']
  abv decimal(5,2) [not null]
  limited_edition boolean [note: "한정판: NULL은 UNKNOWN"]
  released_bottles varchar(32) [note: "총 발매병수(예: '2000', '≈500' 등)"]
  bottling_format_type BottlingFormatType [not null, default: 'UNKNOWN']
  chill_filtered boolean [note: "NULL은 UNKNOWN"]
  natural_color boolean [note: "NULL은 UNKNOWN"]
  peat_level PeatLevel [not null, default: 'UNKNOWN']
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}

// -- 캐스크 (Casks) --
Table cask_materials {
  id bigint [pk, increment]
  name varchar(50) [not null, unique, note: "예: American Oak, European Oak, Mizunara 등"]
  translations jsonb [note: "다국어 지원"]
  descriptions jsonb [note: "다국어 지원"]
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table cask_types {
  id bigint [pk, increment]
  name varchar(50) [not null, unique, note: "예: Barrel, Butt, Puncheon 등"]
  translations jsonb [note: "다국어 지원"]
  descriptions jsonb [note: "다국어 지원"]
  size_litre int [note: "예: 200L, 500L 등"]
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table casks {
  id bigint [pk, increment]
  name varchar(100) [not null, unique, note: "예: PX Sherry Butt, Bourbon Barrel 등"]
  category_id bigint [ref: > categories.id, note: "예: 버번, 셰리와인 등"]
  material_id bigint [ref: > cask_materials.id]
  shape_id bigint [ref: > cask_types.id]
  translations jsonb [note: "다국어 지원"]
  descriptions jsonb [note: "다국어 지원"]
  status DataStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  updated_at timestamptz(6) [not null]
  updated_by bigint [ref: > users.id, not null]
  deleted_at timestamptz(6)
  deleted_by bigint [ref: > users.id]
}
Table release_cask_relations {
  id bigint [pk, increment]
  release_id bigint [ref: > releases.id, not null]
  fill_number FillNumber [not null, default: 'UNKNOWN']
  cask_id bigint [ref: > casks.id, not null]
  proportion decimal(5,2) [note: "비율(%)"]
  maturation_months smallint
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
}

// -- 리비전 (수정 이력) --
Table entity_revisions {
  id bigint [pk, increment]
  entity_type RevisionEntityType [not null, note: "수정 대상 엔티티 종류"]
  entity_id bigint [not null, note: "수정 대상 엔티티 ID"]
  schema_version varchar(16) [not null, default: '1.0']
  revision_data jsonb [not null]
  diff_data jsonb
  is_latest boolean [not null, default: true, note: "생성 시 이전 버전 값 false로 변경"]
  status RevisionStatus [not null, default: 'IN_REVIEW']
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
  reviewed_at timestamptz(6)
  reviewed_by bigint [ref: > users.id]

  // indexes {
  //   (entity_type, entity_id, is_latest = true) [unique]
  // }
}

// -- 키워드 태깅 --
Table entity_tags {
  id bigint [pk, increment]
  entity_type TagEntityType [not null, note: "태그 대상 엔티티 종류"]
  entity_id bigint [not null, note: "태그 대상 엔티티 ID"]
  language_code LanguageCode [not null]
  tag varchar(50) [not null]
  created_at timestamptz(6) [not null]
  created_by bigint [ref: > users.id, not null]
}


// === GEO DATA ===

// -- 지역 정보: 대륙 → 하위 지역 → 국가 → 주/도 → 도시  --
Table regions {
  id bigint [pk, not null, increment]
  name varchar(100) [not null]
  translations text [note: "다국어 JSON, 예: {'ko':'유럽'}"]
  created_at timestamptz(6)
  updated_at timestamptz(6) [not null]
  flag smallint [not null, default: 1, note: "0=비활성, 1=활성"]
  "wikiDataId" varchar(255) [note: "위키데이터 Q번호, 예: 'Q46'"]
}
Table subregions {
  id bigint [pk, not null, increment]
  name varchar(100) [not null]
  translations text [note: "다국어 JSON, 예: {'ko':'서유럽'}"]
  region_id bigint [not null, ref: > regions.id]
  created_at timestamptz(6)
  updated_at timestamptz(6) [not null]
  flag smallint [not null, default: 1, note: "0=비활성, 1=활성"]
  "wikiDataId" varchar(255) [note: "위키데이터 Q번호, 예: 'Q990'"]
}
Table countries {
  id bigint [pk, not null, increment]
  name varchar(100) [not null, note: "영문 국가명, 예: 'South Korea'"]
  iso3 char(3) [note: "ISO 3166-1 alpha-3, 예: 'KOR'"]
  numeric_code char(3) [note: "ISO 3166-1 numeric, 예: '410'"]
  iso2 char(2) [note: "ISO 3166-1 alpha-2, 예: 'KR'"]
  phonecode varchar(255) [note: "국제전화코드, 예: '82'"]
  capital varchar(255) [note: "수도, 예: 'Seoul'"]
  currency varchar(255) [note: "통화코드, 예: 'KRW'"]
  currency_name varchar(255) [note: "통화명, 예: 'South Korean won'"]
  currency_symbol varchar(255) [note: "통화기호, 예: '₩'"]
  tld varchar(255) [note: "최상위 도메인, 예: '.kr'"]
  native varchar(255) [note: "자국어 국가명, 예: '대한민국'"]
  region varchar(255) [note: "상위 지역명(영문), 예: 'Asia'"]
  region_id bigint [ref: > regions.id]
  subregion varchar(255) [note: "하위 지역명(영문), 예: 'Eastern Asia'"]
  subregion_id bigint [ref: > subregions.id]
  nationality varchar(255) [note: "국민명, 예: 'Korean'"]
  timezones text [note: "JSON 배열, 예: ['UTC+9']"]
  translations text [note: "다국어 JSON, 예: {'ko':'대한민국'}"]
  latitude numeric(10,8)
  longitude numeric(11,8)
  emoji varchar(191) [note: "국기 이모지, 예: '🇰🇷'"]
  "emojiU" varchar(191) [note: "유니코드, 예: 'U+1F1F0 U+1F1F7'"]
  created_at timestamptz(6)
  updated_at timestamptz(6) [not null]
  flag smallint [not null, default: 1, note: "0=비활성, 1=활성"]
  "wikiDataId" varchar(255) [note: "위키데이터 Q번호, 예: 'Q884'"]
}
Table states {
  id bigint [pk, not null, increment]
  name varchar(255) [not null, note: "주/도 명칭, 예: 'California', '서울특별시'"]
  country_id bigint [not null, ref: > countries.id]
  country_code char(2) [not null, note: "ISO 국가코드, 예: 'US', 'KR'"]
  fips_code varchar(255) [note: "미국 등 FIPS 코드, 예: 'CA'"]
  iso2 varchar(255) [note: "ISO 2자리 주/도 코드, 예: 'CA', '11'"]
  type varchar(191) [note: "행정구역 종류, 예: 'State', 'Province', 'Special City'"]
  level integer [note: "행정 단계, 예: 1=광역, 2=시/군 등"]
  parent_id integer
  latitude numeric(10,8)
  longitude numeric(11,8)
  created_at timestamptz(6)
  updated_at timestamptz(6) [not null]
  flag smallint [not null, default: 1, note: "0=비활성, 1=활성"]
  "wikiDataId" varchar(255) [note: "위키데이터 Q번호, 예: 'Q485705'"]
}
Table cities {
  id bigint [pk, not null, increment]
  name varchar(255) [not null, note: "도시명(영문), 예: 'Seoul', 'San Francisco'"]
  state_id bigint [not null, ref: > states.id]
  state_code varchar(255) [not null, note: "주/도 코드, 예: 'CA', '11'"]
  country_id bigint [not null, ref: > countries.id]
  country_code char(2) [not null, note: "ISO 국가코드, 예: 'US', 'KR'"]
  latitude numeric(10,8) [not null]
  longitude numeric(11,8) [not null]
  created_at timestamptz(6) [not null, default: `'2014-01-01 12:01:01'`]
  updated_at timestamptz(6) [not null]
  flag smallint [not null, default: 1, note: "0=비활성, 1=활성"]
  "wikiDataId" varchar(255) [note: "위키데이터 Q번호, 예: 'Q8684'"]
}
# ================================================================================
# 🌍 Geo DB Management Scripts Configuration
# ================================================================================
# 이 파일은 geo_db 관련 모든 스크립트들이 공유하는 환경 설정 파일입니다.
# - pre_check.py: SQL 파일의 JSON 번역 필드 검증 및 수정
# - post_check.py: 데이터베이스의 JSON 번역 필드 검증
# - db_upsert.py: 지리 데이터베이스 업서트 작업
# ================================================================================

# ================================================================================
# 📊 DATABASE CONFIGURATION
# ================================================================================

# --- Main Database (Production/Target DB) ---
# 실제 데이터가 저장되는 메인 데이터베이스 설정
MAIN_DB_NAME=your_production_db
MAIN_DB_USER=postgres
MAIN_DB_PASSWORD=your_password
MAIN_DB_HOST=localhost
MAIN_DB_PORT=5432

# --- Temporary Database (Import/Processing) ---
# dump 파일 import 및 임시 처리용 데이터베이스 설정
TEMP_DB_NAME=temp_db
TEMP_DB_USER=postgres
TEMP_DB_PASSWORD=your_password
TEMP_DB_HOST=localhost
TEMP_DB_PORT=5432

# ================================================================================
# 📁 FILE PATHS
# ================================================================================

# --- SQL Dump File ---
# 지리 데이터가 포함된 SQL dump 파일의 절대 경로
# MacOS/Linux 예시:
DUMP_FILE=/path/to/your/project/scripts/geo_db/data/world.sql
# Windows 예시:
# DUMP_FILE=C:\\Users\\yourusername\\path\\to\\world.sql

# ================================================================================
# 🔍 TRANSLATION VALIDATION SETTINGS
# ================================================================================

# --- Logging Configuration ---
# 번역 검증 로그 파일 설정 (pre_check.py, post_check.py 사용)
TRANSLATION_LOG_DIR=translations/log
TRANSLATION_LOG_FILE=translation_check.log

# --- Validation Targets ---
# 번역 필드 검증 대상 테이블들 (쉼표로 구분)
TARGET_TABLES=regions,subregions,countries

# --- Error Display Settings ---
# JSON 오류 발생 시 표시할 컨텍스트 문자 길이
ERROR_CONTEXT_LENGTH=30

# --- Auto Fix Settings (pre_check.py 전용) ---
# JSON 오류 자동 수정 모드 (true/false)
AUTO_FIX_ERRORS=true
# 자동 수정 시 백업 파일 생성 여부 (true/false)
CREATE_BACKUP=true

# ================================================================================
# 🔄 DATABASE UPSERT SETTINGS
# ================================================================================

# --- Logging Configuration ---
# DB 업서트 로그 파일 설정 (db_upsert.py 사용)
DB_UPSERT_LOG_DIR=upsert/log
DB_UPSERT_LOG_FILE=db_upsert.log

# --- Upsert Targets ---
# 업서트할 테이블 목록 (쉼표로 구분, 순서 중요)
# 의존성 순서: regions → subregions → countries → states → cities
UPSERT_TABLES=regions,subregions,countries,states,cities

# --- Wait Settings ---
# 임시 DB에서 테이블 생성 대기 설정
WAIT_TABLE=subregions
WAIT_TIMEOUT=10

# ================================================================================
# 📋 사용법 가이드
# ================================================================================
# 
# 1. 이 파일을 .env로 복사하세요:
#    cp .env.example .env
#
# 2. 실제 환경에 맞게 값들을 수정하세요:
#    - 데이터베이스 연결 정보 (MAIN_DB_*, TEMP_DB_*)
#    - world.sql 파일 경로 (DUMP_FILE)
#    - 로그 파일 경로 (선택사항)
#
# 3. 스크립트 실행:
#    python pre_check.py     # SQL 파일 JSON 검증/수정
#    python post_check.py    # DB JSON 검증
#    python db_upsert.py     # 데이터 업서트
#
# ================================================================================